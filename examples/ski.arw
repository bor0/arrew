# SKI formal system, as per https://en.wikipedia.org/wiki/SKI_combinator_calculus

## SKI base terms
rTmS : S
rTmK : K
rTmI : I
rTm( : (
rTm) : )
tmS! : rTmS
tmK! : rTmK
tmI! : rTmI
tm(! : rTm(
tm)! : rTm)

## SKI term construction rules
rTm : (xy)

## SKI derivation rules
rId : ⊢da(Ix)ib -> ⊢daxib
rConst : ⊢da((Kx)y)ib -> ⊢daxib
rSubst : ⊢da(((Sx)y)z)ib -> ⊢da((xz)(yz))ib

#################################
# Initial theorem for the example
rEgTerm : ⊢(I(((SK)S)K))
thEgTerm : rEgTerm

# Terms needed for the proofs
tm(SK)! : rTm x=tmS!;y=tmK!
tm((SK)S)! : rTm x=tm(SK)!;y=tmS!
tm(((SK)S)K))! : rTm x=tm((SK)S)!;y=tmK!

# Theorems
th(((SK)S)K) : rId x=tm(((SK)S)K))! thEgTerm
thKK(SK) : rSubst x=tmK!;y=tmS!;z=tmK! th(((SK)S)K)

# Finally, we prove that, by the assumption of ⊢ISKSK we can deduce ⊢K (note this is different from K (tmK!))
thK : rConst x=tmK!;y=tm(SK)! thKK(SK)

###########
# Recursion

rRecTerm : ⊢(((SI)I)(((SI)I)))
thRecTerm : rRecTerm

# Terms needed for the proof
tm(SI)! : rTm x=tmS!;y=tmI!
tm((SI)I)! : rTm x=tm(SI)!;y=tmI!
tm(((SI)I))! : rTm x=tm((SI)I)!
tm(I(((SI)I)))! : rTm x=tmI!;y=tm(((SI)I))!

# SII(SII) = I(SII)(I(SII)) = I(SII)(SII) = SII(SII)
tmRecStep1 : rSubst x=tmI!;y=tmI!;z=tm(((SI)I))! thRecTerm
tmRecStep2 : rId d=tm(!;a=tm(I(((SI)I)))!;x=tm(((SI)I))!;b=tm)! tmRecStep1
tmRecStep3 : rId a=tm(!;x=tm(((SI)I))!;i=tm(((SI)I))!;b=tm)! tmRecStep2
